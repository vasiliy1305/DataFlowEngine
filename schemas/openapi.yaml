openapi: 3.0.3
info:
  title: Sensor Data Collection API
  version: 1.0.0
  description: |
    API для системы сбора и анализа данных с аналоговых датчиков:
    - Прием данных от датчиков
    - Управление метаданными
    - Анализ временных рядов
  contact:
    email: api@sensorhub.example.com

servers:
  - url: https://api.sensorhub.example.com/v1
    description: Production server
  - url: https://dev-api.sensorhub.example.com/v1
    description: Development server

tags:
  - name: Sensors
    description: Управление метаданными датчиков
  - name: Ingestion
    description: Прием данных измерений
  - name: Query
    description: Запрос данных и аналитика

paths:
  /sensors:
    post:
      tags: [Sensors]
      summary: Зарегистрировать новый датчик
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SensorCreate'
      responses:
        '201':
          description: Датчик зарегистрирован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sensor'
        '400':
          description: Неверные параметры датчика
    get:
      tags: [Sensors]
      summary: Получить список датчиков
      parameters:
        - $ref: '#/components/parameters/groupFilter'
      responses:
        '200':
          description: Список датчиков
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sensor'

  /sensors/{sensor_id}:
    get:
      tags: [Sensors]
      summary: Получить информацию о датчике
      parameters:
        - $ref: '#/components/parameters/sensorId'
      responses:
        '200':
          description: Метаданные датчика
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sensor'
        '404':
          description: Датчик не найден

  /ingest:
    post:
      tags: [Ingestion]
      summary: Отправить данные датчика
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SingleDataPoint'
                - $ref: '#/components/schemas/BatchDataPoints'
      responses:
        '202':
          description: Данные приняты в обработку
        '400':
          description: Ошибка валидации данных

  /data/current/{sensor_id}:
    get:
      tags: [Query]
      summary: Текущее значение датчика
      parameters:
        - $ref: '#/components/parameters/sensorId'
      responses:
        '200':
          description: Последнее зарегистрированное значение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPoint'
        '404':
          description: Нет данных для датчика

  /data/history/{sensor_id}:
    get:
      tags: [Query]
      summary: Исторические данные
      parameters:
        - $ref: '#/components/parameters/sensorId'
        - $ref: '#/components/parameters/timeFrom'
        - $ref: '#/components/parameters/timeTo'
        - $ref: '#/components/parameters/aggregation'
      responses:
        '200':
          description: Массив точек данных
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataPoint'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  parameters:
    sensorId:
      name: sensor_id
      in: path
      required: true
      schema:
        type: string
      example: "temp_boiler_01"
    groupFilter:
      name: group
      in: query
      schema:
        type: string
      example: "boiler_room"
    timeFrom:
      name: from
      in: query
      schema:
        type: string
        format: date-time
      example: "2024-01-01T00:00:00Z"
    timeTo:
      name: to
      in: query
      schema:
        type: string
        format: date-time
      example: "2024-01-02T00:00:00Z"
    aggregation:
      name: agg
      in: query
      schema:
        type: string
        enum: [raw, 1m, 5m, 1h, 1d]
      description: Уровень агрегации данных

  schemas:
    SensorCreate:
      type: object
      required: [sensor_id, physical_quantity, unit]
      properties:
        sensor_id:
          type: string
          pattern: '^[a-z0-9_]+$'
        name:
          type: string
        physical_quantity:
          type: string
          enum: [temperature, pressure, humidity, current, voltage]
        unit:
          type: string
          enum: ["°C", "kPa", "%", "mA", "V"]
        min_value:
          type: number
        max_value:
          type: number
        group_id:
          type: string
      example:
        sensor_id: "temp_boiler_01"
        name: "Температура в котле"
        physical_quantity: "temperature"
        unit: "°C"
        min_value: -20
        max_value: 120
        group_id: "boiler_room"

    Sensor:
      allOf:
        - $ref: '#/components/schemas/SensorCreate'
        - type: object
          properties:
            created_at:
              type: string
              format: date-time
            status:
              type: string
              enum: [active, inactive, maintenance]

    SingleDataPoint:
      type: object
      required: [sensor_id, value]
      properties:
        sensor_id:
          type: string
        value:
          type: number
        timestamp:
          type: string
          format: date-time
      example:
        sensor_id: "temp_boiler_01"
        value: 75.3
        timestamp: "2024-01-01T12:00:00Z"

    BatchDataPoints:
      type: array
      items:
        $ref: '#/components/schemas/SingleDataPoint'
      minItems: 1
      maxItems: 1000

    DataPoint:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        value:
          type: number
        unit:
          type: string
      example:
        timestamp: "2024-01-01T12:00:00Z"
        value: 75.3
        unit: "°C"